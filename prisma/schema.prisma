// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Prisma schema

enum Gender {
  unset
  Pria
  Wanita
}

enum Posisi {
  unset
  SuperAdmin
  Admin
  Sales
}

enum Status {
  Active
  Inactive
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  gender    Gender   @default(unset)
  email     String   @unique
  password  String
  alamat    String
  no_telp   String
  posisi    Posisi   @default(unset)
  status    Status   @default(Active) // Set a default value
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Purchase {
  id                Int      @id @default(autoincrement())
  supplier_id       Int
  code              String   @unique
  shipping_cost     Int
  shipping_info     String
  other_cost        Int
  other_info        String
  total             Int
  payment           String
  payment_method    String
  status            String
  product_id        Int
  product_quantity  Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Sale {
  id                Int      @id @default(autoincrement())
  sales_id          Int
  customer_id       Int
  code              String   @unique
  shipping_cost     Int
  shipping_info     String
  other_cost        Int
  other_info        String
  payment_method    String
  status String
  total             Int
  product_id        Int
  product_quantity  Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}

model Supplier{
  id Int  @id @default(autoincrement())
  supplier_name String
  supplier_address String
  phone_number String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Product{
  id Int  @id @default(autoincrement())
  product_name String
  product_price Int
  product_quantity Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
